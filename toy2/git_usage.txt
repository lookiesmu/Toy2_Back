git remote rm origin :origin에 등록된 remote 삭제

git remote rename old_name new_name : remote 저장소 이름 바꾸기

git push -f origin my-feature :코드 변경 이력 덮어쓰기 (강제로 push)

git branch --list : 레퍼지토리에 연결된 모든 branch 확인

git checkout 브랜치명 : 해당 브랜치로 switch

git branch 브랜치명 또는 git checkout -b 브랜치명 : local 브랜치 생성

git branch --set-upstream-to origin(원격저장소)/feature-01(브랜치명) : 원격저장소와 브랜치 연동.
---github.com 에서 추가된 branch확인가능(or git push --set-upstream origin new_branch) 

git push 원격(remote)저장소명 브랜치명: 원격저장소에 연결되는 브랜치생성,push

git branch --delete 브랜치명 : 로컬의 해당 브랜치 삭제. 삭제전 다른 브랜치로 이동해주어야함.

git branch -D 브랜치명 : 브랜치에 commit이 남아있는경우 강제 브랜치삭제

git branch -m 변경전_branch_name 새로운_branch_name : 브랜치 이름 변경

git push 원격저장소명 :브랜치명 :원격저장소의 브랜치 삭제

git fetch <remote> : remote 저장소의 모든 branch의 모든 data 가져옴(임시저장, 브랜치를 선택하고 merge 따로해야 실제 파일에 반영됨)

git merge <remote>/브랜치명 : fetch 로 가져온(임시저장된) data의 해당 브랜치 data와 merge 한다.

1. origin :

     원격 저장소의 이름입니다. 

      원격저장소 시간때 원격저장소 추가 명령어는

       git remote add <이름> <url>로 붙인다.

      마찬가지로 git remote add origin <url> 형식으로 원격저장소를 추가하거나

      git clone을 통해 원격저장소를 복사한다면

      자동으로 origin이라는 이름의 원격저장소가 등록되게 됩니다.

2. master :

     브랜치 중 가장 중심이 되는 기본적인 branch를 master 브랜치라고 부릅니다

3. HEAD :

     현재 내가 어떤 작업공간에 있는지를 나타냅니다. 

      예를 들어 만약 제가 master 브랜치에서 작업을 하고 있다면

      제 HEAD는 master 브랜치에 있게 되는 것이고,

      다른 작업을 위해 feature 브랜치를 만들어줬다면 

      제 HEAD는 feature 브랜치에 있게 되는 겁니다  